services:
  api:
    image: js-26-team-2-esdp-api
    container_name: api
    build:
      context: api
      dockerfile: Dockerfile
      network: host
    ports:
      - 8000:8000
    volumes:
      - uploads-volume:/app/uploads/
      - ${SSL_LOCATION:-/dev/null}:${SSL_LOCATION:-/dev/null}:ro
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - ORIGIN=${WEB_HOST}
      - MONGO_HOST=db
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - SSL_LOCATION=${SSL_LOCATION}
    depends_on:
      db:
        condition: service_started
    networks:
      - backend
    restart: always

  db:
    image: mongo
    container_name: db
    volumes:
      - db-volume:/data/db/
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    networks:
      - backend
    restart: always

  web:
    image: js-26-team-2-esdp-web
    container_name: web
    build:
      context: frontend
      dockerfile: Dockerfile
      network: host
    volumes:
      - ${SSL_LOCATION:-/dev/null}:${SSL_LOCATION:-/dev/null}:ro
    ports:
      - 443:443
    depends_on:
      api:
        condition: service_started
    restart: always

networks:
  backend:
    name: backend
    driver: bridge

volumes:
  uploads-volume:
    name: ${UPLOADS_VOLUME}
    external: true

  db-volume:
    name: ${MONGO_VOLUME}
    external: true
